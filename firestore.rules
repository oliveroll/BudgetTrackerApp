rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // User's transactions
      match /transactions/{transactionId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // User's budgets
      match /budgets/{budgetId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // User's savings goals
      match /savingsGoals/{goalId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // User's loans
      match /loans/{loanId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Global transactions collection (alternative structure)
    match /transactions/{transactionId} {
      // Allow read if user is authenticated
      allow read: if request.auth != null;
      // Allow create if authenticated and setting their own userId
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      // Allow update/delete if user owns the document
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Global budgets collection
    match /budgets/{budgetId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Global savings goals collection
    match /savingsGoals/{goalId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Global loans collection
    match /loans/{loanId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Budget essentials and subscriptions (user-specific collections)
    match /users/{userId}/essentials/{expenseId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /users/{userId}/subscriptions/{subscriptionId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /users/{userId}/balance/{doc} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Financial Goals - Debt Loans
    match /users/{userId}/debtLoans/{loanId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /users/{userId}/debtPayments/{paymentId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Financial Goals - Roth IRA
    match /users/{userId}/rothIRAs/{iraId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /users/{userId}/iraContributions/{contributionId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Financial Goals - Emergency Fund
    match /users/{userId}/emergencyFunds/{fundId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /users/{userId}/emergencyFundDeposits/{depositId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Financial Goals - ETF Portfolio
    match /users/{userId}/etfPortfolios/{portfolioId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /users/{userId}/etfHoldings/{holdingId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /users/{userId}/investmentTransactions/{transactionId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Public read-only data (app metadata, categories, etc.)
    match /metadata/{document} {
      allow read: if true;
      allow write: if false;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}