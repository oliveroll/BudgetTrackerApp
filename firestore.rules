rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ============================================
    // HELPER FUNCTIONS
    // ============================================
    
    // Check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Check if the authenticated user is the owner of the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Check if the document belongs to the authenticated user
    function belongsToUser() {
      return isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // Check if the incoming data has the correct userId
    function hasCorrectUserId() {
      return isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }
    
    // ============================================
    // USER DOCUMENTS - PROPER STRUCTURE
    // ============================================
    
    // User profile documents - only owner can access
    match /users/{userId} {
      // User can read/write their own profile
      allow read, write: if isOwner(userId);
      
      // ============================================
      // USER SUBCOLLECTIONS - ALL FINANCIAL DATA
      // ============================================
      
      // Transactions - income and expenses
      match /transactions/{transactionId} {
        allow read, write: if isOwner(userId);
      }
      
      // Essential expenses - fixed monthly bills
      match /essentialExpenses/{expenseId} {
        allow read, write: if isOwner(userId);
      }
      
      // Subscriptions - recurring payments
      match /subscriptions/{subscriptionId} {
        allow read, write: if isOwner(userId);
      }
      
      // Debt loans
      match /goals/debtLoans/{loanId} {
        allow read, write: if isOwner(userId);
        
        // Loan payment history
        match /payments/{paymentId} {
          allow read, write: if isOwner(userId);
        }
      }
      
      // Roth IRA accounts
      match /goals/rothIRAs/{iraId} {
        allow read, write: if isOwner(userId);
        
        // IRA contribution history
        match /contributions/{contributionId} {
          allow read, write: if isOwner(userId);
        }
      }
      
      // Emergency funds
      match /goals/emergencyFunds/{fundId} {
        allow read, write: if isOwner(userId);
        
        // Emergency fund deposit history
        match /deposits/{depositId} {
          allow read, write: if isOwner(userId);
        }
      }
      
      // ETF portfolios
      match /goals/etfPortfolios/{portfolioId} {
        allow read, write: if isOwner(userId);
        
        // Portfolio holdings
        match /holdings/{holdingId} {
          allow read, write: if isOwner(userId);
        }
        
        // Portfolio transactions
        match /transactions/{transactionId} {
          allow read, write: if isOwner(userId);
        }
      }
      
      // Paychecks
      match /paychecks/{paycheckId} {
        allow read, write: if isOwner(userId);
      }
      
      // Balance snapshots
      match /balance/{balanceId} {
        allow read, write: if isOwner(userId);
      }
      
      // FCM devices for push notifications
      match /fcmDevices/{deviceId} {
        allow read, write: if isOwner(userId);
      }
      
      // FCM reminders
      match /fcmReminders/{reminderId} {
        allow read, write: if isOwner(userId);
      }
      
      // Catch-all for any other subcollections
      match /{subcollection}/{document=**} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // ============================================
    // LEGACY ROOT COLLECTIONS (DEPRECATED)
    // Only allow if document has userId field matching auth
    // These should be migrated to user subcollections
    // ============================================
    
    // Legacy transactions at root level
    match /transactions/{transactionId} {
      // Read: only if it belongs to the user
      allow read: if belongsToUser();
      
      // Write: only if user is authenticated and setting correct userId
      allow create: if hasCorrectUserId();
      allow update, delete: if belongsToUser();
    }
    
    // Legacy fixed expenses at root level
    match /fixedExpenses/{expenseId} {
      allow read: if belongsToUser();
      allow create: if hasCorrectUserId();
      allow update, delete: if belongsToUser();
    }
    
    // Legacy subscriptions at root level
    match /subscriptions/{subscriptionId} {
      allow read: if belongsToUser();
      allow create: if hasCorrectUserId();
      allow update, delete: if belongsToUser();
    }
    
    // Legacy income sources
    match /incomeSources/{sourceId} {
      allow read: if belongsToUser();
      allow create: if hasCorrectUserId();
      allow update, delete: if belongsToUser();
    }
    
    // Legacy variable expense categories
    match /variableExpenseCategories/{categoryId} {
      allow read: if belongsToUser();
      allow create: if hasCorrectUserId();
      allow update, delete: if belongsToUser();
    }
    
    // ============================================
    // DENY ALL OTHER ACCESS
    // ============================================
    
    // Explicitly deny access to any other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
